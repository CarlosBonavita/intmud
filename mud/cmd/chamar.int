classe h_cmd_chamar
herda comando_comum
const objcmd = config:animal1 ? este
const txtajuda = config:animal1 ? txtajuda1 + m_ajuda
const txtajuda1 = "\b\c3Chamar\b\nSintaxe: CHAMAR\n"
const posic = 5
#
const m_ajuda = "Chama de volta para o comando Animal um animal seu que está solto."
const m_sem_animal = "Não possui nenhum animal solto."
const m_montado = "$O está montad$u em $a."
const m_nao_tem = "Você não tem $m."
const m_chama_solta = "Não é possível chamar $a."
const m_animal_cheio = "Sem espaço para chamar animal."
const m_entra1 = "Você traz $a de volta."
const m_entra2 = "$P traz $a de volta."
const admordem = "m_ajuda m_sem_animal m_montado m_nao_tem\n\
m_chama_solta m_animal_cheio m_entra1 m_entra2"

func escr
  listaitem i
  epara i = arg0.lseguir.ini, i && i.obj.tseguir != 3, i.depois
  efim
  ret !i, $mens.mp(m_sem_animal, arg0)
  ref r = i.obj
  ret r.persolugar, $mens.mp(m_montado, arg0, r, r.persolugar.objini)
  ret r.p_animal != 2, $mens.mp(m_chama_solta, arg0, r)
  ret !arg0.animalmais, $mens.mp(m_animal_cheio, arg0, r)
  chamar(arg0, arg0.dono, r)

func chamar
# arg0 = quem está chamando
# arg1 = origem (sala aonde está)
# arg2 = animal
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_chamar(arg0, arg1, arg2, arg0), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_chamar(arg0, arg1, arg2, arg1), nulo
  efim
  epara e.addfim(arg2.evento), e, e.ini.remove
    ret e.objini.cmd_chamar(arg0, arg1, arg2, arg2), nulo
  efim
  arg2.batalhafim
  e.addfim1(arg1, arg2.dono)
  arg2.mudadono(arg0)
  $mens.p(arg0, arg2)
  epara e.remove(arg0, arg2), e, e.ini.remove
    $mens.msgvis(m_entra2, e.objini)
  efim
  $mens.msgvis(m_entra1, arg0)
  epara e.addfim(arg0.evento), e, e.ini.remove
    e.objini.cmd_chamou(arg0, arg1, arg2, arg0)
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    e.objini.cmd_chamou(arg0, arg1, arg2, arg1)
  efim
  epara e.addfim(arg2.evento), e, e.ini.remove
    e.objini.cmd_chamou(arg0, arg1, arg2, arg2)
  efim


classe m_cmd_chamar
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const clas1 = "cmd_chamar"
const vari1 = "m_ajuda"
#
const nome2 = "Nenhum animal solto"
const tipo2 = "opc_linha"
const clas2 = "cmd_chamar"
const vari2 = "m_sem_animal"
#
const nome3 = "Montado no animal"
const tipo3 = "opc_linha"
const clas3 = "cmd_chamar"
const vari3 = "m_montado"
#
const nome4 = "Não tem animal"
const tipo4 = "opc_linha"
const clas4 = "cmd_chamar"
const vari4 = "m_nao_tem"
#
const nome5 = "Não chama"
const tipo5 = "opc_linha"
const clas5 = "cmd_chamar"
const vari5 = "m_chama_solta"
#
const nome6 = "Animais cheio"
const tipo6 = "opc_linha"
const clas6 = "cmd_chamar"
const vari6 = "m_animal_cheio"
#
const nome7 = "Pegou perso"
const tipo7 = "opc_linha"
const clas7 = "cmd_chamar"
const vari7 = "m_entra1"
#
const nome8 = "Pegou outros"
const tipo8 = "opc_linha"
const clas8 = "cmd_chamar"
const vari8 = "m_entra2"
