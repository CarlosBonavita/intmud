classe comando_prompt
herda comando_comum
const objtipo = 2 # Pode renomear
const posic = 0
const m_ajuda = "-t\n\
Sintaxe: $1 [texto]\n\
         $2 [texto]\n\n\
$1 é uma ou mais linhas para indicar a você que o MUD já enviou todas\n\
as mensagens pendentes. Com essa opção pode-se personalisar as mensagens,\n\
inclusive adicionando algumas variáveis, como pontos de vida, hora, etc.\n\n\
$2 funciona de forma idêntica ao $1, porém corresponde à\n\
mensagem durante a batalha.\n\
Sem nenhum texto, essas opções mostram o prompt atual.\n\
Se o texto for a palavra ini (exemplo: $1 INI), o prompt será\n\
redefinido para o padrão do MUD.\n\n\
Nota: para a mensagem de prompt aparecer, deve estar habilitada no\n\
comando $3.\n\n\
As seguintes sequências de caracteres têm um significado especial:\n\n\
 \c2%n\b  Nome do seu personagem usado nas batalhas\n\
 \c2%N\b  Nome do seu oponente (se estiver batalhando)\n\
 \c2%h\b  Pontos de vida atuais\n\
 \c2%H\b  Total de pontos de vida\n\
 \c2%p\b  Pontos de vida em porcentagem\n\
 \c2%P\b  Pontos de vida em uma barra de 10 caracteres\n\
 \c2%o\b  Pontos de vida do oponente em porcentagem\n\
 \c2%O\b  Pontos de vida do oponente em uma barra de 10 caracteres\n\
 \c2%m\b  Pontos de mana atuais\n\
 \c2%M\b  Pontos de mana totais\n\
 \c2%v\b  Pontos de vigor atuais\n\
 \c2%V\b  Pontos de vigor totais\n\
 \c2%g\b  Quantidade de moedas que seu personagem possui\n\
 \c2%l\b  Nível do seu personagem\n\
 \c2%L\b  Nível do seu oponente\n\
 \c2%x\b  Experiência do seu personagem\n\
 \c2%X\b  Experiência necessária para o próximo nível\n\
 \c2%T\b  Conforme o sol: amanhecendo, manhã, tarde, anoitecendo, noite\n\
 \c2%d\b  Hora no MUD\n\
 \c2%D\b  Hora no servidor\n\
 \c2%z\b  Uma quebra de linha (para definir prompts de várias linhas)\n\
 \c2%Z\b  O caracter %\n\
 \c2%t\b  O mesmo que um espaço em branco\n\n\
Exemplos (considerando 30 pontos de vida, 45 de mana e 50 de vigor):\n\n\
$1 %h%m                =  3045\n\
$1 %h %m %v            =  30 45 50\n\
$1 <%hhp %mmn %vmv>    =  <30hp 45mn 50mv>\n\
$1 <%c3%hhp %c2%mmn %c6%vmv%b>  = <\c330hp \c245mn \c650mv\b>  (com cores)\n\n\
Veja também: AJUDA CORES"
const m_prompt = "Prompt:\n$m"
const m_bprompt = "Prompt de batalha:\n$m"
const m_novo_prompt = "Prompt alterado para:\n$m"
const m_novo_bprompt = "Prompt de batalha alterado para:\n$m"

func comando # arg0=classe base, retorna objeto que processa o comando
  prog p
  p.iniherdainv(arg0)
  ret $[p.texto].objcmd

func txtajuda
  $mens.o_1 = txtmai(txt2(txte(comando("h_cmd_prompt"))))
  $mens.o_2 = txtmai(txt2(txte(comando("h_cmd_bprompt"))))
  $mens.o_3 = txtmai(txt2(txte(comando("h_cmd_config"))))
  $mens.p(este)
  ret txtajuda1($mens.txt(m_ajuda))


classe h_cmd_prompt
herda comando_prompt
const objmenu = $m_cmd_prompt

func escr
  se !arg1
    $mens.mens = arg0.var.z_prompt
    $mens.mp(m_prompt, arg0)
  senao
    txt100 lin
    lin = arg1 == "ini" ? config:promptmsg : arg1
    arg0.var.z_prompt = lin
    $mens.mens = lin
    $mens.mp(m_novo_prompt, arg0)
  fimse


classe h_cmd_bprompt
herda comando_prompt
const m_bprompt = comando("h_cmd_prompt").m_bprompt
const m_novo_bprompt = comando("h_cmd_prompt").m_novo_bprompt

func escr
  se !arg1
    $mens.mens = arg0.var.z_bprompt
    $mens.mp(m_bprompt, arg0)
  senao
    txt100 lin
    lin = arg1 == "ini" ? config:bpromptmsg : arg1
    arg0.var.z_bprompt = lin
    $mens.mens = lin
    $mens.mp(m_novo_bprompt, arg0)
  fimse


classe m_cmd_prompt
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Prompt"
const tipo2 = "opc_linha"
const vari2 = "m_prompt"
#
const nome3 = "Bprompt"
const tipo3 = "opc_linha"
const vari3 = "m_bprompt"
#
const nome4 = "Novo Prompt"
const tipo4 = "opc_linha"
const vari4 = "m_novo_prompt"
#
const nome5 = "Novo Bprompt"
const tipo5 = "opc_linha"
const vari5 = "m_novo_bprompt"
