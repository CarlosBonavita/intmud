classe cmd_pegar
herda comando_comum
const txtajuda = "\b\c3Pegar\b\n\
Sintaxe: PEGAR <objeto>\n\
         PEGAR <quantidade> <objeto>\n\
         PEGAR <objeto> <container>\n\
         PEGAR <quantidade> <objeto> <container>\n\
Pega um objeto do chão ou de um container (uma bolsa, uma estante, etc).\n\
Para pegar tudo (até 10 objetos) tecle TUDO ao invés do objeto."
const posic = 5
#
ref sala # De onde pegar os itens
uint32 total # Quantidade de itens do mesmo tipo
txt20 mens # Parte da mensagem
int8 achou # Quantos itens achou
txt100 erro # Mensagem de erro

func escr
  refvar perm_msg = $perm_[arg0.jogperm].item
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_pegar(arg0, arg1), nulo
  efim
  arg0.p_espera < 3 && (arg0.p_espera = 3)
# Obtém o objeto de onde pegar
  misc:separa(arg1) # Separa nome do objeto do nome do alvo
  se !misc:sep2 # Se não tem alvo, o alvo é a sala
    sala = arg0.dono
    mens = "."
  senao
    sala = misc:itemtudo(arg0, misc:sep2) # Procura o alvo para o personagem arg0
    se !sala
      ret arg0.msg("Você não vê " + misc:sep2 + ".")
    senao !sala.i_aberto
      ret arg0.msg(txtcopiamai(sala.descnome, "A") + " não é container.")
    senao sala.i_aberto > 2 && !arg0.j_imortal
      ret arg0.msg(txtcopiamai(sala.descnome, "A") + " está fechad" + (sala.msexo ? "o." : \
"a."))
    fimse
    mens = " $d $a."
  fimse
  nomeobj n # Para reconhecer os itens
  n.ini(misc:sep1, misc:objmax, misc:tudo)
# Pega os itens
  achou = 0, erro = "Você não vê isso."
  epara l.addfim(sala.dentro1), l, l.ini.remove
    continuar !l.objini.visivel(arg0) || !n.nome(l.objini.ident, l.objini.objtot)
    total = n # Quantidade de itens
    pegarobj(arg0, sala, l.objini)
    sair achou >= 10
  efim
  ret achou, nulo
# Pega moedas
  se sala.var.z_moedas_ && sala.visivel(arg0) && n.nome("moedas", sala.var.z_moedas_)
    total = int(misc:sep1) ? n : sala.var.z_moedas
    ret pegarmoedas(arg0, sala)
  fimse
# Não encontrou o item
  arg0.msg(erro)

func pegarobj
# arg0=personagem, arg1=de onde pegar, arg2=item que quer pegar, total=quantidade de itens
# Faz achou+=1 se pegou o item
# Coloca mensagem de erro na variável erro se não conseguiu pegar
  se arg2.i_pegar
    erro = arg2.i_pegar
    ret
  senao arg2.persolugar
    casovar arg2.persolugar.objini.posicao
    casose "4"
      erro = "Você não consegue pegar porque tem alguém dormindo em cima."
      ret
    casose "5"
      erro = "Você não consegue pegar porque tem alguém descansando em cima."
      ret
    casose "6"
      erro = "Você não consegue pegar porque tem alguém sentado em cima."
      ret
    casofim
    erro = "Você não consegue pegar porque tem alguém em cima."
    ret
  senao arg0.dentro1.total + (arg2.item == 2 ? 1 : total) > arg0.objmax
    erro = "Você não consegue carregar tanta coisa."
    ret
  senao arg0.volden + arg2.voltot * total / arg2.objtot > arg0.volmax
    erro = "Você não consegue carregar tanta coisa."
    ret
  senao arg0 == arg1.dono
  senao arg0.pesoden - arg0.pesoveste + arg2.pesotot * total / arg2.objtot > arg0.pesomax
    se arg2.pesotot > arg2.objtot * arg0.pesomax * 2
      erro = "É pesado demais."
    senao
      erro = "Você não consegue carregar tanto peso."
    fimse
    ret
  senao (arg0.objnum >> 1) + (arg2.objnum >> 1) > config:itens
    erro = "Você não consegue carregar tanta coisa."
    ret
  fimse
  achou++
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg2, total, arg0), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg2, total, arg1), nulo
  efim
  epara e.addfim(arg2.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg2, total, arg2), nulo
  efim
  $mens.p(arg0, arg1, arg2)
  se total <= 1
    $mens.mvis1("$P pega $o" + mens)
  senao
    $mens.mvis1("$P pega " + total + "x $o" + mens)
  fimse
  refvar r = arg2.mudadono(arg0, total)
  epara e.addfim(arg0.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, arg0)
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, arg1)
  efim
  epara e.addfim(r.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, r)
  efim
  arg0.p_espera += 2

func pegarmoedas
# arg0=persoangem, arg1=de onde pegar, total=quantidade de moedas
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_pegarmoedas(arg0, arg1, total, arg0), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_pegarmoedas(arg0, arg1, total, arg1), nulo
  efim
  ret !total, nulo
  arg1.var.z_moedas_ -= total
  arg1.var.z_moedas_ < 0 && (arg1.var.z_moedas = "")
  arg0.var.z_moedas_ += total
  arg0.p_espera += 2
  arg1.objmudou = 1
  $mens.p(arg0, arg1)
  se total == 1
    $mens.mvis1("$P pega uma moeda" + mens)
  senao total == 2
    $mens.mvis1("$P pega duas moedas" + mens)
  senao
    $mens.mvis1("$P pega " + total + " moedas" + mens)
  fimse
