classe h_cmd_ordenar
herda comando_comum
const posic = 5
const txtajuda = txtajuda1 + m_ajuda
const txtajuda1 = "\b\c3Ordenar\b\nSintaxe: ORDENAR <personagem> <comando>\n"
#
const m_ajuda = "Dá uma ordem a um personagem controlado por você, como se o personagem\n\
tivesse escrito o comando especificado."
const m_sem_args = "Ordenar quem?"
const m_naover = "Você não vê $m."
const m_controle = "$A não está sob o seu controle."
const m_sem_cmd = "Ordenar o quê?"
const m_ordenar1 = "Você ordena $a."
const m_ordenar2 = "$P dá a seguinte ordem: $m"
const m_ordenar3 = "$P ordena $a."
const admordem = "m_ajuda m_sem_args m_naover m_sem_cmd m_controle m_sem_cmd\
m_ordenar1 m_ordenar2 m_ordenar3"

func escr
  $mens.mens = arg1
  ret !arg1, $mens.mp(m_sem_args, arg0)
  ref r = misc:persodono(arg0, txt1(arg1))
  ret !r, $mens.mp(m_naover, arg0, r)
  ret r.tseguir != 3 || r.iseguir.objlista != arg0, $mens.mp(m_controle, arg0, r)
  ret !txt2(arg1), $mens.mp(m_sem_cmd, arg0, r)
  $mens.mens = txt2(arg1)
  $mens.p(arg0, r)
  $mens.mvis3(m_ordenar1, m_ordenar2, m_ordenar3)
  r.teclou(txt2(arg1))


classe m_cmd_ordenar
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const clas1 = "cmd_ordenar"
const vari1 = "m_ajuda"
#
const nome2 = "Sem argumentos"
const tipo2 = "opc_linha"
const clas2 = "cmd_ordenar"
const vari2 = "m_sem_args"
#
const nome3 = "Sem alvo"
const tipo3 = "opc_linha"
const clas3 = "cmd_ordenar"
const vari3 = "m_naover"
#
const nome4 = "Sem controle"
const tipo4 = "opc_linha"
const clas4 = "cmd_ordenar"
const vari4 = "m_controle"
#
const nome5 = "Sem comando"
const tipo5 = "opc_linha"
const clas5 = "cmd_ordenar"
const vari5 = "m_sem_args"
#
const nome6 = "Ordena Perso"
const tipo6 = "opc_linha"
const clas6 = "cmd_ordenar"
const vari6 = "m_ordena1"
#
const nome7 = "Ordena Alvo"
const tipo7 = "opc_linha"
const clas7 = "cmd_ordenar"
const vari7 = "m_ordena2"
#
const nome8 = "Ordena Outros"
const tipo8 = "opc_linha"
const clas8 = "cmd_ordenar"
const vari8 = "m_ordena3"
