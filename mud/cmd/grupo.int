classe h_cmd_grupo
herda comando_comum
const objmenu = $m_cmd_grupo
const objtipo = 2 # Pode renomear
const posic = 5
uint16 nivelmax # Nível máximo para entrar no grupo; vide função nivelgrupo
uint16 nivelmin # Nível mínimo para entrar no grupo; vide função nivelgrupo
#
const m_ajuda = "-t\n\
-s <personagem>\n\
-s +\n\
-s -\n\
-s\n\
Permite que dois ou mais jogadores de níveis próximos trabalhem em grupo,\n\
dividindo a experiência ganha em batalhas.\n\
Quando alguém do grupo é atacado os outros também entram na luta.\n\
Os membros do grupo podem ainda conversar entre si com o comando GCHAT.\n\
Na movimentação pelo MUD, o grupo é semelhante aos seus integrantes\n\
seguindo o líder.\n\n\
Digitando GRUPO e o nome de um personagem, adiciona no seu grupo\n\
o personagem que está seguindo você. Se já estava adicionado, remove.\n\
Um personagem também pode deixar o grupo digitando SEGUIR.\n\
GRUPO + adiciona todos que estão seguindo você.\n\
GRUPO - encerra o grupo fazendo os membros pararem de seguir o líder.\n\
Digitar GRUPO sem nenhum argumento mostra as estatísticas de cada membro\n\
do grupo.\n\
Vide também os comandos: \c2SEGUIR\b  \c2GCHAT\b"
#
const v_nivel = 10
const m_naover = "Você não vê $m."
const m_encerrado = "Grupo encerrado."
const m_nenhum_grupo = "Você não está em nenhum grupo."
const m_nao_lider = "Você não é $s líder do grupo."
const m_batalha = "Você está lutando."
const m_nivel_baixo = "$A está abaixo do nível $m."
const m_nivel_alto = "$A está acima do nível $m."
const m_nome_grupo = "Grupo de $C"
const m_nao_adicionar = "$A não pode ser adicionad$t."
const m_adicionado = "Adicionado no grupo: $m"
const m_removido = "Removido do grupo: $m"
const m_ninguem_adicionado = "Nenhum personagem adicionado no grupo."
const m_animal = "Este personagem pertence a um jogador"
const admordem = "m_ajuda v_nivel m_naover m_encerrado m_nenhum_grupo m_nao_lider\n\
m_batalha m_nivel_baixo m_nivel_alto m_nome_grupo m_nao_adicionar m_adicionado\n\
m_removido m_ninguem_adicionado m_animal"

func escr
  listaobj l
# Animal do jogador
  se arg0.tseguir == 3
    $mens.msg(m_animal, l.objini)
# Encerrar o grupo
  senao arg1 == "-"
    se arg0.tseguir == 2
      $mens.p(arg0)
      epara l.addfim(arg0.lseguir), l, l.ini.remove
        continuar l.objini.tseguir != 1
        l.objini.iseguir.remove
        l.objini.tseguir = 0
        $mens.msg(m_encerrado, l.objini)
      efim
      arg0.tseguir = 0
      $mens.msg(m_encerrado, arg0)
      ret
    senao arg0.iseguir && arg0.tseguir == 1
      ret $mens.mp(m_nao_lider, arg0)
    senao
      ret $mens.mp(m_nenhum_grupo, arg0)
    fimse
# Adicionar quem está seguindo no grupo
  senao arg1 == "+"
    se arg0.iseguir && arg0.tseguir != 0 && arg0.tseguir != 2
      ret $mens.mp(m_nao_lider, arg0)
    senao arg0.atkenv
      ret $mens.mp(m_batalha, arg0)
    fimse
    nivelgrupo(arg0)
    txt200 lin
    epara l.addfim(arg0.lseguir), l, l.ini.remove
      refvar obj = l.objini
      se obj.tseguir
      senao obj.pnivel < nivelmin
        $mens.mens = nivelmin
        $mens.mp(m_nivel_baixo, arg0, obj)
      senao obj.pnivel > nivelmax
        $mens.mens = nivelmax
        $mens.mp(m_nivel_alto, arg0, obj)
      senao
        obj.tseguir = 1
        lin += ", " + txtcopiamai(obj.descnome2, "A")
        nivelgrupo(arg0)
      fimse
    efim
    ret !lin, $mens.mp(m_ninguem_adicionado, arg0)
    arg0.tseguir = 2
    msggrupo(arg0, m_adicionado, txt2(lin))
    ret
# Adicionar/remover um personagem no grupo
  senao arg1
    se arg0.iseguir && arg0.tseguir == 1
      ret $mens.mp(m_nao_lider, arg0)
    senao arg0.atkenv
      ret $mens.mp(m_batalha, arg0)
    fimse
    nomeobj n
    n.ini(arg1, 1)
    l.addfim(arg0.lseguir)
    epara nulo, l && !n.nome(l.objini.ident2), l.ini.remove
    efim
    refvar obj = ref(l.objini)
    se !obj
      $mens.mens = arg1
      ret $mens.mp(m_naover, arg0)
    senao int(obj.tseguir) >= 2
      ret $mens.mp(m_nao_adicionar, arg0, obj)
    fimse
    nivelgrupo(arg0)
    se obj.tseguir
      msggrupo(arg0, m_removido, obj.descnome2)
      obj.tseguir = 0
    senao obj.pnivel < nivelmin
      $mens.mens = nivelmin
      $mens.mp(m_nivel_baixo, arg0, obj)
    senao obj.pnivel > nivelmax
      $mens.mens = nivelmax
      $mens.mp(m_nivel_alto, arg0, obj)
    senao
      obj.tseguir = 1, arg0.tseguir = 2
      msggrupo(arg0, m_adicionado, obj.descnome2)
    fimse
    ret
# Informações sobre os integrantes do grupo
  senao
    ref lider = arg0.donogrupo
    arg0.listagrupo(l)
    $mens.mp(lider ? m_nome_grupo : m_nenhum_grupo, arg0, lider)
    epara !lider && l.ini.remove, l, l.ini.remove
      $mens.p(arg0, l.objini)
      $mens.mens = info(l.objini)
      $mens.msgvis("$A $m", arg0)
    efim
    ret
  fimse

func info # Retorna informações de um personagem
# arg0 = personagem
  txt100 lin = " Vida " + arg0.pvida + "/" + arg0.pvidamax
  lin += "  Mana " + arg0.pmana + "/" + arg0.pmanamax
  lin += "  Vigor " + arg0.pmove + "/" + arg0.pmovemax
  lin += "  Nível " + arg0.pnivel
  ret lin

func msggrupo # Envia mensagem para todos do grupo
# arg0 = personagem líder do grupo
# arg1 = mensagem
# arg2 = $m na mensagem
  refvar mens = txttroca(arg1, "$m", arg2)
  arg0.msg(mens)
  listaobj l
  epara l.addfim(arg0.lseguir), l, l.ini.remove
    l.objini.tseguir == 1 && l.objini.msg(mens)
  efim

func nivelgrupo # Acerta variáveis nivelmin e nivelmax
# arg0 = personagem líder do grupo
  nivelmin = nivelmax = arg0.pnivel
  listaitem i
  epara i = arg0.lseguir.ini, i, i.depois
    se i.obj.tseguir != 1
    senao nivelmin > i.obj.pnivel
      nivelmin = i.obj.pnivel
    senao nivelmax < i.obj.pnivel
      nivelmax = i.obj.pnivel
    fimse
  efim
  refvar dif = intpos(v_nivel - (nivelmax - nivelmin))
  nivelmax += dif, nivelmin -= dif


classe h_cmd_gchat
herda comando_comum
const objmenu = $m_cmd_gchat
const objtipo = 2 # Pode renomear
const objnivel = 4
const posic = 0
#
const m_ajuda = "-t\n\
-s <mensagem>\n\
Envia uma mensagem para todos os integrantes do seu grupo. Se a mensagem\n\
for omitida, mostra as últimas mensagens enviadas e recebidas.\n\
Vide também: GRUPO"
const m_hist_vazio = "Nenhuma mensagem de Gchat."
const m_hist_lista = "\b\c6Últimas mensagens de Gchat:\b"
const m_nenhum_grupo = "Você não está em nenhum grupo."
const m_enviou1 = "(gchat) Você '$m'"
const m_enviou2 = "(gchat) $R '$m'"
const m_hist1 = "$R '$m'"
const m_hist2 = "$R '$m'"
const admordem = "m_ajuda m_nenhum_grupo m_hist_vazio m_hist_lista\n\
m_hist1 m_hist2"

func escr
  ref lider
  se !arg1
    ret !arg0.sock.var.z_hist_gchat, $mens.mp(m_hist_vazio, arg0)
    refvar t = arg0.sock.txtmais
    t.limpar
    t.addfim(m_hist_lista)
    t.addfim(arg0.sock.var.z_hist_gchat)
    ret arg0.sock.txtmostra
  fimse
  ret !arg0.donogrupo, $mens.mp(m_nenhum_grupo, arg0)
  $mens.mens = arg1
  $mens.p(arg0)
  listaobj l
  arg0.listagrupo(l)
  epara l.addfim(lider.lseguir), l, l.ini.remove
    continuar !l.objini.sock
    refvar r = l.objini
    $mens.msginv(arg0 == r ? m_enviou1 : m_enviou2, r)
    refvar m2 = arg0 == r ? m_hist1 : m_hist2
    refvar r2 = r.sock.var.z_hist_gchat
    r2 = $mens.txt(m2, r) + (r2 ? "\n") + txtsublin(r2, 0, 29)
  efim


classe m_cmd_grupo
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Diferença de nível"
const tipo2 = "opc_numero"
const vari2 = "v_nivel"
#
const nome3 = "Sem alvo"
const tipo3 = "opc_linha"
const vari3 = "m_naover"
#
const nome4 = "Grupo encerrado"
const tipo4 = "opc_linha"
const vari4 = "m_encerrado"
#
const nome5 = "Nenhum grupo"
const tipo5 = "opc_linha"
const vari5 = "m_nenhum_grupo"
#
const nome6 = "Não é o líder"
const tipo6 = "opc_linha"
const vari6 = "m_nao_lider"
#
const nome7 = "Durante a batalha"
const tipo7 = "opc_linha"
const vari7 = "m_batalha"
#
const nome8 = "Nível abaixo"
const tipo8 = "opc_linha"
const vari8 = "m_nivel_baixo"
#
const nome9 = "Nível acima"
const tipo9 = "opc_linha"
const vari9 = "m_nivel_alto"
#
const nome10 = "Nome do grupo"
const tipo10 = "opc_linha"
const vari10 = "m_nome_grupo"
#
const nome11 = "Não pode adicionar"
const tipo11 = "opc_linha"
const vari11 = "m_nao_adicionar"
#
const nome12 = "Adicionado"
const tipo12 = "opc_linha"
const vari12 = "m_adicionado"
#
const nome13 = "Removido"
const tipo13 = "opc_linha"
const vari13 = "m_removido"
#
const nome14 = "Ninguém adicionado"
const tipo14 = "opc_linha"
const vari14 = "m_ninguem_adicionado"
#
const nome15 = "Animal"
const tipo15 = "opc_linha"
const vari15 = "m_animal"


classe m_cmd_gchat
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Histórico vazio"
const tipo2 = "opc_linha"
const vari2 = "m_hist_vazio"
#
const nome3 = "Histórico"
const tipo3 = "opc_linha"
const vari3 = "m_hist_lista"
#
const nome4 = "Nenhum grupo"
const tipo4 = "opc_linha"
const vari4 = "m_nenhum_grupo"
#
const nome5 = "Mensagem perso"
const tipo5 = "opc_linha"
const vari5 = "m_enviou1"
#
const nome6 = "Mensagem outros"
const tipo6 = "opc_linha"
const vari6 = "m_enviou2"
#
const nome7 = "Histórico perso"
const tipo7 = "opc_linha"
const vari7 = "m_hist1"
#
const nome8 = "Histórico outros"
const tipo8 = "opc_linha"
const vari8 = "m_hist2"
