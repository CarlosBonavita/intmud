classe cmd_reviver
herda comando_comum
const posic = 5
const txtajuda = "\b\c3Reviver\b\n\
Sintaxe: REVIVER\n\
Após atingir o nível máximo para a raça e a classe que você escolheu,\n\
você pode usar esse comando para escolher outra raça e/ou classe."

func escr
  refvar nmax = int(intmax(t_[arg0.tipo1]:nmax, t_[arg0.tipo2]:nmax, t_[arg0.tipo3]:nmax))
  se nmax <= 0
    ret arg0.msg("Na raça e classe que você escolheu não é permitido reviver.")
  senao arg0.pnivel < nmax
    ret arg0.msg("Você precisa chegar no nível " + nmax + " para reviver.")
  senao
    arg0.sock.tpasso = "1"
    passo(arg0.sock, "")
  fimse

func passo
  arg0.passo = este
  ret !passo1(arg0, arg1), 1
  enquanto passo1(arg0, "")
  efim
  ret 1

func passo1
  txt100 lin
  prog p
  refvar tpasso = arg0.tpasso
# Informações da raça
  se txt2(tpasso)
    se arg1 == "S"
      ret escolheu(arg0)
    senao arg1 == "N"
      tpasso = txt1(tpasso)
      ret 1
    senao
      lin = int(tpasso) == 1 ? "raça" : int(tpasso) == 2 ? "classe" : "subclasse"
      arg0.msg("Você quer essa " + lin + "? (tecle S ou N)")
      ret 0
    fimse
  fimse
# Cancelar
  se arg1 == "Z"
    arg0.passo = ""
    arg0.var.limpar("j_")
    arg0.msg("Desistiu")
    ret 0
  fimse
# Obtém a lista de raças/classes/subclasses e checa se escolheu alguma
  arg0.txtmais.limpar
  epara p.iniclasse("t_"), p.lin, p.depois
    continuar txt($[p.texto].menu) != tpasso
    se !$[p.texto].racas || tpasso < 2
    senao txtproc("\n" + $[p.texto].racas + "\n", "\n" + arg0.var.j_tipo1 + "\n") < 0
      continuar
    fimse
    se !$[p.texto].classes || tpasso < 3
    senao txtproc("\n" + $[p.texto].classes + "\n", "\n" + arg0.var.j_tipo2 + "\n") < 0
      continuar
    fimse
    arg0.txtmais.addfim(txt(arg0.txtmais.linhas + 1) + ". " + $[p.texto].nome)
    lin = p.texto
    continuar txt(arg1) != txt(arg0.txtmais.linhas)
    arg0.txtmais.limpar
    tpasso += " " + p.texto
    arg0.msg2($[p.texto].desc ? $[p.texto].desc : $[p.texto].nome)
    ret 1
  efim
# Obtém a nova lista de raças/classes/subclasses e checa se escolheu alguma
  textotxt t
  t.addfim($t_[arg0.perso.tipo[tpasso]].evoluir)
  enquanto t.linhas
    refvar texto = "t_" + t.remove
    continuar texto == "t_"
    se !$[texto].racas || tpasso < 2
    senao txtproc("\n" + $[texto].racas + "\n", "\n" + arg0.var.j_tipo1 + "\n") < 0
      continuar
    fimse
    se !$[texto].classes || tpasso < 3
    senao txtproc("\n" + $[texto].classes + "\n", "\n" + arg0.var.j_tipo2 + "\n") < 0
      continuar
    fimse
    arg0.txtmais.addfim(txt(arg0.txtmais.linhas + 1) + ". " + $[texto].nome)
    lin = texto
    continuar txt(arg1) != txt(arg0.txtmais.linhas)
    arg0.txtmais.limpar
    tpasso += " " + texto
    arg0.msg2($[texto].desc ? $[texto].desc : $[texto].nome)
    ret 1
  efim
# Uma ou nenhuma: escolhe automaticamente
  se arg0.txtmais.linhas <= 1
    arg0.txtmais.limpar
    tpasso += " " + lin
    ret escolheu(arg0)
# Mais de uma raça: apresenta o menu
  senao
    lin = int(tpasso) == 1 ? "raça" : int(tpasso) == 2 ? "classe" : "subclasse"
    se arg1
      arg0.txtmais.addini(txtmaimin(lin) + " inválida; escolha uma:")
    senao
      arg0.txtmais.addini("Escolha uma " + lin + " ou tecle Z para desistir")
    fimse
    arg0.txtmostra
    ret 0
  fimse

func escolheu # Jogador fez a escolha
# arg0 = personagem
# txt1(arg0.tpasso) = 1 se raça, 2 se classe, 3 se subclasse
# txt2(arg0.tpasso) = nome da classe t_ alguma coisa
# Retorna 1 se deve fazer mais uma escolha: se txt1(arg0.tpasso)<=3
  arg0.var.j_tipo[txt1(arg0.tpasso)] = txt(txt2(arg0.tpasso), 2)
  arg0.tpasso = int(arg0.tpasso) + 1
  ret arg0.tpasso <= 3, 1
  arg0.passo = ""
  arg0.perso.tipo1 = arg0.var.j_tipo1
  arg0.perso.tipo2 = arg0.var.j_tipo2
  arg0.perso.tipo3 = arg0.var.j_tipo3
  arg0.perso.pnivel = 1
  arg0.perso.expatual = 0
  arg0.perso.recalc = 1
  arg0.perso.var.z_reviver_ += 1
  arg0.var.limpar("j_")
  arg0.msg("Você reviveu para o nível 1.")
  listaobj l
  epara l.addfim(arg0.perso.dentro2), l, l.ini.remove
    l.objini.item && l.objini.pnivel > 1 && l.objini.vestir(0)
  efim
  ret 0
